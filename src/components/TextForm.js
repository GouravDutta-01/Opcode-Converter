import React, {useState} from "react";

export default function TextForm(props) {
  const handleOpCode =()=>{
    props.setProgress(30);
    var itemsToState = {
      ACI: "CE (2 bytes instruction)",
      ADCA: "8F (1 byte instruction)",
      ADCB: "88 (1 byte instruction)",
      ADCC: "89 (1 byte instruction)",
      ADCD: "8A (1 byte instruction)",
      ADCE: "8B (1 byte instruction)",
      ADCH: "8C (1 byte instruction)",
      ADCL: "8D (1 byte instruction)",
      ADCM: "8E (1 byte instruction)",
      ADDA: "87 (1 byte instruction)",
      ADDB: "80 (1 byte instruction)",
      ADDC: "81 (1 byte instruction)",
      ADDD: "82 (1 byte instruction)",
      ADDE: "83 (1 byte instruction)",
      ADDH: "84 (1 byte instruction)",
      ADDL: "85 (1 byte instruction)",
      ADDM: "86 (1 byte instruction)",
      ADI: "C6 (2 bytes instruction)",
      ANAA: "A7 (1 byte instruction)",
      ANAB: "A0 (1 byte instruction)",
      ANAC: "A1 (1 byte instruction)",
      ANAD: "A2 (1 byte instruction)",
      ANAE: "A3 (1 byte instruction)",
      ANAH: "A4 (1 byte instruction)",
      ANAL: "A5 (1 byte instruction)",
      ANAM: "A6 (1 byte instruction)",
      ANI: "E6 (2 bytes instruction)",
      CALL: "CD (3 bytes instruction)",
      CC: "DC (3 bytes instruction)",
      CM: "FC (3 bytes instruction)",
      CMA: "2F (1 byte instruction)",
      CMC: "3F (1 byte instruction)",
      CMPA: "BF (1 byte instruction)",
      CMPB: "B8 (1 byte instruction)",
      CMPC: "B9 (1 byte instruction)",
      CMPD: "BA (1 byte instruction)",
      CMPE: "BB (1 byte instruction)",
      CMPH: "BC (1 byte instruction)",
      CMPL: "BD (1 byte instruction)",
      CMPM: "BD (1 byte instruction)",
      CNC: "D4 (3 bytes instruction)",
      CNZ: "C4 (3 bytes instruction)",
      CP: "F4 (3 bytes instruction)", 
      CPE: "EC (3 bytes instruction)",
      CPI: "FE (2 bytes instruction)", 
      CPO: "E4 (3 bytes instruction)", 
      CZ: "CC (3 bytes instruction)", 
      DAA: "27 (1 byte instruction)", 
      DADB: "09 (1 byte instruction)", 
      DADD: "19 (1 byte instruction)", 
      DADH: "29 (1 byte instruction)", 
      DADSP: "39 (1 byte instruction)", 
      DCRA: "3D (1 byte instruction)",
      DCRB: "05 (1 byte instruction)",
      DCRC: "0D (1 byte instruction)",
      DCRD: "15 (1 byte instruction)",
      DCRE: "1D (1 byte instruction)",
      DCRH: "25 (1 byte instruction)",
      DCRL: "2D (1 byte instruction)", 
      DCRM: "35 (1 byte instruction)", 
      DCXB: "0B (1 byte instruction)", 
      DCXD: "1B (1 byte instruction)", 
      DCXH: "2B (1 byte instruction)", 
      DCXSP: "3B (1 byte instruction)", 
      DI: "F3 (1 byte instruction)", 
      EI: "FB (1 byte instruction)", 
      HLT: "76 (1 byte instruction)", 
      IN: "DB (2 bytes instruction)", 
      INRA: "3C (1 byte instruction)",
      INRB: "04 (1 byte instruction)",
      INRC: "0C (1 byte instruction)",
      INRD: "14 (1 byte instruction)",
      INRE: "1C (1 byte instruction)",
      INRH: "24 (1 byte instruction)",
      INRL: "2C (1 byte instruction)",
      INRM: "34 (1 byte instruction)",
      INXB: "03 (1 byte instruction)",
      INXD: "13 (1 byte instruction)",
      INXH: "23 (1 byte instruction)",
      INXSP: "33 (1 byte instruction)",
      JC: "DA (3 bytes instruction)",
      JM: "FA (3 bytes instruction)",
      JMP: "C3 (3 bytes instruction)",
      JNC: "D2 (3 bytes instruction)",
      JNZ: "C2 (3 bytes instruction)",
      JP: "F2 (3 bytes instruction)",
      JPE: "EA (3 bytes instruction)",
      JPO: "E2 (3 bytes instruction)",
      JZ: "CA (3 bytes instruction)", 
      LDA: "3A (3 bytes instruction)", 
      LDAXB: "0A (1 byte instruction)", 
      LDAXD: "1A (1 byte instruction)", 
      LHLD:  "2A (3 bytes instruction)", 
      LXIB: "01 (3 bytes instruction)", 
      LXID: "11 (3 bytes instruction)", 
      LXIH: "21 (3 bytes instruction)", 
      LXISP: "31 (3 bytes instruction)", 
      MOVAA: "7F (1 byte instruction)", 
      MOVAB: "78 (1 byte instruction)", 
      MOVAC: "79 (1 byte instruction)", 
      MOVAD: "7A (1 byte instruction)", 
      MOVAE: "7B (1 byte instruction)", 
      MOVAH: "7C (1 byte instruction)", 
      MOVAL: "7D (1 byte instruction)", 
      MOVAM: "7E (1 byte instruction)", 
      MOVBA: "47 (1 byte instruction)", 
      MOVBB: "40 (1 byte instruction)", 
      MOVBC: "41 (1 byte instruction)", 
      MOVBD: "42 (1 byte instruction)", 
      MOVBE: "43 (1 byte instruction)", 
      MOVBH: "44 (1 byte instruction)", 
      MOVBL: "45 (1 byte instruction)", 
      MOVBM: "46 (1 byte instruction)", 
      MOVCA: "4F (1 byte instruction)", 
      MOVCB: "48 (1 byte instruction)", 
      MOVCC: "49 (1 byte instruction)", 
      MOVCD: "4A (1 byte instruction)", 
      MOVCE: "4B (1 byte instruction)", 
      MOVCH: "4C (1 byte instruction)", 
      MOVCL: "4D (1 byte instruction)", 
      MOVCM: "4E (1 byte instruction)", 
      MOVDA: "57 (1 byte instruction)", 
      MOVDB: "50 (1 byte instruction)", 
      MOVDC: "51 (1 byte instruction)", 
      MOVDD: "52 (1 byte instruction)", 
      MOVDE: "53 (1 byte instruction)", 
      MOVDH: "54 (1 byte instruction)", 
      MOVDL: "55 (1 byte instruction)", 
      MOVDM: "56 (1 byte instruction)", 
      MOVEA: "5F (1 byte instruction)", 
      MOVEB: "58 (1 byte instruction)", 
      MOVEC: "59 (1 byte instruction)", 
      MOVED: "5A (1 byte instruction)", 
      MOVEE: "5B (1 byte instruction)", 
      MOVEH: "5C (1 byte instruction)", 
      MOVEL: "5D (1 byte instruction)",
      MOVEM: "5E (1 byte instruction)",
      MOVHA: "67 (1 byte instruction)",
      MOVHB: "60 (1 byte instruction)",
      MOVHC: "61 (1 byte instruction)",
      MOVHD: "62 (1 byte instruction)",
      MOVHE: "63 (1 byte instruction)",
      MOVHH: "64 (1 byte instruction)",
      MOVHL: "65 (1 byte instruction)",
      MOVHM: "66 (1 byte instruction)",
      MOVLA: "6F (1 byte instruction)",
      MOVLB: "68 (1 byte instruction)",
      MOVLC: "69 (1 byte instruction)",
      MOVLD: "6A (1 byte instruction)",
      MOVLE: "6B (1 byte instruction)",
      MOVLH: "6C (1 byte instruction)",
      MOVLL: "6D (1 byte instruction)",
      MOVLM: "6E (1 byte instruction)",
      MOVMA: "77 (1 byte instruction)",
      MOVMB: "70 (1 byte instruction)",
      MOVMC: "71 (1 byte instruction)",
      MOVMD: "72 (1 byte instruction)",
      MOVME: "73 (1 byte instruction)",
      MOVMH: "74 (1 byte instruction)",
      MOVML: "75 (1 byte instruction)",
      MVIA: "3E (2 bytes instruction)",
      MVIB: "06 (2 bytes instruction)",
      MVIC: "0E (2 bytes instruction)",
      MVID: "16 (2 bytes instruction)",
      MVIE: "1E (2 bytes instruction)",
      MVIH: "26 (2 bytes instruction)",
      MVIL: "2E (2 bytes instruction)",
      MVIM: "36 (2 bytes instruction)",
      NOP: "00 (1 byte instruction)", 
      ORAA: "B7 (1 byte instruction)", 
      ORAB: "B0 (1 byte instruction)", 
      ORAC: "B1 (1 byte instruction)", 
      ORAD: "B2 (1 byte instruction)", 
      ORAE: "B3 (1 byte instruction)", 
      ORAH: "B4 (1 byte instruction)", 
      ORAL: "B5 (1 byte instruction)", 
      ORAM: "B6 (1 byte instruction)", 
      ORI: "F6 (2 bytes instruction)", 
      OUT: "D3 (2 bytes instruction)", 
      PCHL: "E9 (1 byte instruction)",
      POPB: "C1 (1 byte instruction)",
      POPD: "D1 (1 byte instruction)",
      POPH: "E1 (1 byte instruction)",
      POPPSW: "F1 (1 byte instruction)", 
      PUSHB: "C5 (1 byte instruction)", 
      PUSHD: "D5 (1 byte instruction)", 
      PUSHH: "E5 (1 byte instruction)", 
      PUSHPSW: "F5 (1 byte instruction)",
      RAL: "17 (1 byte instruction)", 
      RAR: "1F (1 byte instruction)", 
      RC: "D8 (1 byte instruction)", 
      RET: "C9 (1 byte instruction)", 
      RIM: "20 (1 byte instruction)", 
      RLC: "07 (1 byte instruction)", 
      RM: "F8 (1 byte instruction)", 
      RNC: "D0 (1 byte instruction)", 
      RNZ: "C0 (1 byte instruction)", 
      RP: "F0 (1 byte instruction)", 
      RPE: "E8 (1 byte instruction)", 
      RPO: "E0 (1 byte instruction)", 
      RRC: "0F (1 byte instruction)", 
      RST0: "C7 (1 byte instruction)",
      RST1: "CF (1 byte instruction)",
      RST2: "D7 (1 byte instruction)",
      RST3: "DF (1 byte instruction)",
      RST4: "E7 (1 byte instruction)",
      RST5: "EF (1 byte instruction)",
      RST6: "F7 (1 byte instruction)",
      RST7: "FF (1 byte instruction)",
      RZ: "C8 (1 byte instruction)",
      SBBA: "9F (1 byte instruction)",
      SBBB: "98 (1 byte instruction)",
      SBBC: "99 (1 byte instruction)",
      SBBD: "9A (1 byte instruction)",
      SBBE: "9B (1 byte instruction)",
      SBBH: "9C (1 byte instruction)",
      SBBL: "9D (1 byte instruction)",
      SBBM: "9E (1 byte instruction)",
      SBI: "DE (2 bytes instruction)", 
      SHLD: "22 (3 bytes instruction)", 
      SIM: "30 (1 byte instruction)", 
      SPHL: "F9 (1 byte instruction)", 
      STA: "32 (3 bytes instruction)",
      STAXB: "02 (1 byte instruction)",
      STAXD: "12 (1 byte instruction)",
      STC: "37 (1 byte instruction)",
      SUBA: "97 (1 byte instruction)", 
      SUBB: "90 (1 byte instruction)", 
      SUBC: "91 (1 byte instruction)", 
      SUBD: "92 (1 byte instruction)", 
      SUBE: "93 (1 byte instruction)", 
      SUBH: "94 (1 byte instruction)", 
      SUBL: "95 (1 byte instruction)", 
      SUBM: "96 (1 byte instruction)", 
      SUI: "D6 (2 bytes instruction)", 
      XCHG: "EB (1 byte instruction)", 
      XRAA: "AF (1 byte instruction)",
      XRAB: "A8 (1 byte instruction)",
      XRAC: "A9 (1 byte instruction)",
      XRAD: "AA (1 byte instruction)",
      XRAE: "AB (1 byte instruction)",
      XRAH: "AC (1 byte instruction)",
      XRAL: "AD (1 byte instruction)",
      XRAM: "AE (1 byte instruction)",
      XRI: "EE (2 bytes instruction)", 
      XTHL: "E3 (1 byte instruction)",  
    }
    let txt = text.split(" ").join("").toUpperCase();
    txt = txt.replace(",", "");
    if(!(txt in itemsToState)){
        props.setProgress(100);
        setText("");
        props.showAlert("Invalid Input !");
    }
    else{
        let newText = itemsToState[txt];
        setText(newText);
        props.setProgress(100);
        props.showAlert("Converted to Opcode!");
    }
  }
  const handleClearClick =()=>{
    props.setProgress(30);
    let newText = '';
    setText(newText);
    props.setProgress(100);
    props.showAlert("Text Cleared!");
  }
  const handleOnChange = (event)=>{
    setText(event.target.value);
  }
  const [text, setText] = useState('');
  return (
    <>
    <div className="container" style={{color: (props.mode==='dark')?'white':'black'}}>
        <h1 className="text-center"><span style={{color: 'green'}}>Opcode</span>Converter</h1>
        <h4 className="my-5 text-center">Easily convert mnemonics of Intel 8085 microprocessor to opcode online</h4>
      <div className="mb-3">
        <input
          className="form-control"
          value={text}
          onChange={handleOnChange}
          placeholder="Enter your mnemonics and operand here"
          style={{backgroundColor: props.mode === 'light'?'white':'#134651',color: props.mode === 'light'?'black':'white'}}
          id="myBox"
          rows="1"
        ></input>
      </div>
      <div className="text-center">
      <button disabled={text.length===0} className="btn btn-primary mx-1 my-1" onClick={handleOpCode}>Convert to Opcode</button>
      <button disabled={text.length===0} className="btn btn-danger mx-1 my-1" onClick={handleClearClick}>Clear</button>
      </div>
    </div>
    </>
  );
}
